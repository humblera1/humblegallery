services:
  nginx-dev:
    container_name: ${COMPOSE_PROJECT_NAME}-nginx-dev
    image: nginx:1.27.3-alpine
    networks:
      - web
    ports:
      - ${FRONTEND_PORT}:80
      - ${BACKEND_PORT}:88
    volumes:
      - ./:/var/www
      - ./docker/nginx/dev:/etc/nginx/conf.d/
      - uploads_data:/var/www/common/uploads
    depends_on:
      - app-dev

  app-dev:
    container_name: ${COMPOSE_PROJECT_NAME}-app-dev
    build:
      context: ./
      dockerfile: ./docker/php/dev.Dockerfile
    volumes:
      - ./:/var/www
      - uploads_data:/var/www/common/uploads
    env_file:
      - .env
    networks:
      - internal
      - web
    depends_on:
      - mysql-dev
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # convert the file from DOS (CRLF) to UNIX (LF) line endings
    command: sh -c "dos2unix /var/www/docker/start.sh && sh /var/www/docker/start.sh"

  webpack-dev:
    container_name: ${COMPOSE_PROJECT_NAME}-webpack-dev
    image: node:23.6.1-alpine
    working_dir: /var/www
    environment:
      NODE_ENV: development
      # windows device
      WATCHPACK_POLLING: true
    volumes:
      - ./:/var/www
    command: sh -c "npm install && npm run dev"
    depends_on:
      - app-dev
    networks:
      - web

  mysql-dev:
    container_name: ${COMPOSE_PROJECT_NAME}-mysql-dev
    image: mysql:9.2.0
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - internal

networks:
  internal:
  web:
volumes:
  db-data:
  uploads_data: